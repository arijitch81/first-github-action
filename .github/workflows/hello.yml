name: manual-integration-tests
on:
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: choice
        description: Select a test environment
        options:
          - DEV
          - QA
          - STAGE
          - PROD
      test_type:
        required: true
        type: choice
        description: Select a test type
        options:
          - PAYROLL
          - ADDRESSCLEANSE
          - BOTH
      commit_sha:
        type: string
        description: Git Checkout SHA
        required: true

jobs:
  integration-tests:
    env:
      TEST_ENV: ${{ github.event.inputs.environment }}
      TEST_TYPE: ${{ github.event.inputs.test_type }}
      COMMIT_SHA: ${{ github.event.inputs.commit_sha }}
      PROJECT_KEY: PAYC
      TEST_PLAN_KEY: PAYC-27188
      XRAY_SERVER_URL: https://xray.cloud.getxray.app
      XRAY_ENDPOINT: /api/v2/import/execution/junit
    runs-on: [self-hosted, Standard]
    container:
      image: docker.binrepo.vtxdev.net/cloud-base-images/payroll-cloud-base-image:latest
      credentials:
        username: ${{ secrets.AF_DOCKER_USER }}
        password: ${{ secrets.AF_DOCKER_PASS }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ env.COMMIT_SHA }}
      - name: Install additional python dependencies
        run: python -m pip install -r test_automation/requirements.txt
      - name: Print Selected environment
        run: echo "Environment::$TEST_ENV"
      - name: Print Selected test type
        run: echo "Test type::$TEST_TYPE"
      - name: Print SHA commit id
        run: echo "commit id::$COMMIT_SHA"
      - name: X-Ray authentication
        id: get_xray_auth_token
        env:
          AUTH_URL: https://xray.cloud.getxray.app/api/v2/authenticate
          AUTH_CREDENTIALS: '{ "client_id": "${{ secrets.XRAY_CLIENT_ID }}","client_secret": "${{ secrets.XRAY_CLIENT_SECRET }}" }'
        run: |
          auth_token=$(curl -H "Content-Type: application/json" -X POST --data "$AUTH_CREDENTIALS"  "$AUTH_URL"| tr -d '"')
          echo "::set-output name=auth_token::$auth_token"
      - if: env.TEST_ENV == 'DEV' && (env.TEST_TYPE == 'PAYROLL'
          || env.TEST_TYPE == 'BOTH')
        name: Run integration tests in Dev environment for test type PAYROLL/BOTH
        continue-on-error: true
        env:
          CLIENT_ID: '${{ secrets.DEV_CLIENT_ID_CALC }}'
          CLIENT_SECRET: '${{ secrets.DEV_CLIENT_SECRET_CALC }}'
        run: |
          cd test_automation
          python pytest_invoke.py \
          --APP='https://payroll-dev.platdev.vtxdev.net/payroll/v1.0' \
          --AUTH='https://devauth.vertexsmb.com/identity/connect/token' \
          --CLIENT_ID=$CLIENT_ID \
          --CLIENT_SECRET=$CLIENT_SECRET \
          --SCOPE='calculation' \
          --API_ARTIFACTS='DISABLED' \
          --PYTEST='-m not (framework or address_cleanse)'
      - if: env.TEST_ENV == 'DEV' && (env.TEST_TYPE == 'PAYROLL'
          || env.TEST_TYPE == 'BOTH')
        name: XRay import of integration test results in DEV environment for test type PAYROLL/BOTH
        env:
          TEST_EXEC_KEY_AUTOMATION: PAYC-47213
          AUTH_TOKEN: ${{ steps.get_xray_auth_token.outputs.auth_token }}
        continue-on-error: true
        run: |
          automation_url="${XRAY_SERVER_URL}${XRAY_ENDPOINT}?projectKey=${PROJECT_KEY}&testPlanKey=${TEST_PLAN_KEY}&testExecKey=${TEST_EXEC_KEY_AUTOMATION}"
          curl -H "Content-Type: text/xml" -X POST -H "Authorization: Bearer $AUTH_TOKEN" --data @"test_automation/tests/automation-results.xml" $automation_url
      - if: env.TEST_ENV == 'DEV' && (env.TEST_TYPE == 'ADDRESSCLEANSE'
          || env.TEST_TYPE == 'BOTH')
        name: Run integration tests in Dev environment for test type ADDRESSCLEANSE/BOTH
        continue-on-error: true
        env:
          CLIENT_ID: '${{ secrets.DEV_CLIENT_ID_ADDRESS_CLEANSE }}'
          CLIENT_SECRET: '${{ secrets.DEV_CLIENT_SECRET_ADDRESS_CLEANSE }}'
        run: |
          cd test_automation
          python pytest_invoke.py \
          --APP='https://payroll-dev.platdev.vtxdev.net/payroll/v1.0' \
          --AUTH='https://devauth.vertexsmb.com/identity/connect/token' \
          --CLIENT_ID=$CLIENT_ID \
          --CLIENT_SECRET=$CLIENT_SECRET \
          --SCOPE='addr-cleanse' \
          --API_ARTIFACTS='DISABLED' \
          --PYTEST='-m address_cleanse'
      - if: env.TEST_ENV == 'DEV' && (env.TEST_TYPE == 'ADDRESSCLEANSE'
          || env.TEST_TYPE == 'BOTH')
        name: XRay import of integration test results in DEV environment for test type ADDRESSCLEANSE/BOTH
        env:
          TEST_EXEC_KEY_AUTOMATION: PAYC-47216
          AUTH_TOKEN: ${{ steps.get_xray_auth_token.outputs.auth_token }}
        continue-on-error: true
        run: |
          automation_url="${XRAY_SERVER_URL}${XRAY_ENDPOINT}?projectKey=${PROJECT_KEY}&testPlanKey=${TEST_PLAN_KEY}&testExecKey=${TEST_EXEC_KEY_AUTOMATION}"
          curl -H "Content-Type: text/xml" -X POST -H "Authorization: Bearer $AUTH_TOKEN" --data @"test_automation/tests/automation-results.xml" $automation_url
      - if: env.TEST_ENV == 'QA' && (env.TEST_TYPE == 'PAYROLL'
          || env.TEST_TYPE == 'BOTH')
        name: Run integration tests in QA environment for test type PAYROLL/BOTH
        continue-on-error: true
        env:
          CLIENT_ID: '${{ secrets.QA_CLIENT_ID_CALC }}'
          CLIENT_SECRET: '${{ secrets.QA_CLIENT_SECRET_CALC }}'
        run: |
          cd test_automation
          python pytest_invoke.py \
          --APP='https://payroll-qa.platdev.vtxdev.net/payroll/v1.0' \
          --AUTH='https://qaauth.vertexsmb.com/identity/connect/token' \
          --CLIENT_ID=$CLIENT_ID \
          --CLIENT_SECRET=$CLIENT_SECRET \
          --SCOPE='calculation' \
          --API_ARTIFACTS='DISABLED' \
          --PYTEST='-m not (framework or address_cleanse)'
      - if: env.TEST_ENV == 'QA' && (env.TEST_TYPE == 'PAYROLL'
          || env.TEST_TYPE == 'BOTH')
        name: XRay import of integration test results in QA environment for test type PAYROLL/BOTH
        env:
          TEST_EXEC_KEY_AUTOMATION: PAYC-47214
          AUTH_TOKEN: ${{ steps.get_xray_auth_token.outputs.auth_token }}
        continue-on-error: true
        run: |
          automation_url="${XRAY_SERVER_URL}${XRAY_ENDPOINT}?projectKey=${PROJECT_KEY}&testPlanKey=${TEST_PLAN_KEY}&testExecKey=${TEST_EXEC_KEY_AUTOMATION}"
          curl -H "Content-Type: text/xml" -X POST -H "Authorization: Bearer $AUTH_TOKEN" --data @"test_automation/tests/automation-results.xml" $automation_url
      - if: env.TEST_ENV == 'QA' && (env.TEST_TYPE == 'ADDRESSCLEANSE'
          || env.TEST_TYPE == 'BOTH')
        name: Run integration tests in QA environment for test type ADDRESSCLEANSE/BOTH
        continue-on-error: true
        env:
          CLIENT_ID: '${{ secrets.QA_CLIENT_ID_ADDRESS_CLEANSE }}'
          CLIENT_SECRET: '${{ secrets.QA_CLIENT_SECRET_ADDRESS_CLEANSE }}'
        run: |
          cd test_automation
          python pytest_invoke.py \
          --APP='https://payroll-qa.platdev.vtxdev.net/payroll/v1.0' \
          --AUTH='https://qaauth.vertexsmb.com/identity/connect/token' \
          --CLIENT_ID=$CLIENT_ID \
          --CLIENT_SECRET=$CLIENT_SECRET \
          --SCOPE='addr-cleanse' \
          --API_ARTIFACTS='DISABLED' \
          --PYTEST='-m address_cleanse'
      - if: env.TEST_ENV == 'QA' && (env.TEST_TYPE == 'ADDRESSCLEANSE'
          || env.TEST_TYPE == 'BOTH')
        name: XRay import of integration test results in QA environment for test type ADDRESSCLEANSE/BOTH
        env:
          TEST_EXEC_KEY_AUTOMATION: PAYC-47217
          AUTH_TOKEN: ${{ steps.get_xray_auth_token.outputs.auth_token }}
        continue-on-error: true
        run: |
          automation_url="${XRAY_SERVER_URL}${XRAY_ENDPOINT}?projectKey=${PROJECT_KEY}&testPlanKey=${TEST_PLAN_KEY}&testExecKey=${TEST_EXEC_KEY_AUTOMATION}"
          curl -H "Content-Type: text/xml" -X POST -H "Authorization: Bearer $AUTH_TOKEN" --data @"test_automation/tests/automation-results.xml" $automation_url
      - if: env.TEST_ENV == 'STAGE' && (env.TEST_TYPE == 'PAYROLL'
          || env.TEST_TYPE == 'BOTH')
        name: Run integration tests in STAGE environment for test type PAYROLL/BOTH
        continue-on-error: true
        env:
          CLIENT_ID: '${{ secrets.STAGE_CLIENT_ID_CALC }}'
          CLIENT_SECRET: '${{ secrets.STAGE_CLIENT_SECRET_CALC }}'
        run: |
          cd test_automation
          python pytest_invoke.py \
          --APP='https://payroll.cst-stage.vtxdev.net/payroll/v1.0' \
          --AUTH='https://stageauth.vertexsmb.com/identity/connect/token' \
          --CLIENT_ID=$CLIENT_ID \
          --CLIENT_SECRET=$CLIENT_SECRET \
          --SCOPE='calculation' \
          --API_ARTIFACTS='DISABLED' \
          --PYTEST='-m not (framework or address_cleanse)'
      - if: env.TEST_ENV == 'STAGE' && (env.TEST_TYPE == 'PAYROLL'
          || env.TEST_TYPE == 'BOTH')
        name: XRay import of integration test results in STAGE environment for test type PAYROLL/BOTH
        env:
          TEST_EXEC_KEY_AUTOMATION: PAYC-47215
          AUTH_TOKEN: ${{ steps.get_xray_auth_token.outputs.auth_token }}
        continue-on-error: true
        run: |
          automation_url="${XRAY_SERVER_URL}${XRAY_ENDPOINT}?projectKey=${PROJECT_KEY}&testPlanKey=${TEST_PLAN_KEY}&testExecKey=${TEST_EXEC_KEY_AUTOMATION}"
          curl -H "Content-Type: text/xml" -X POST -H "Authorization: Bearer $AUTH_TOKEN" --data @"test_automation/tests/automation-results.xml" $automation_url
      - if: env.TEST_ENV == 'STAGE' && (env.TEST_TYPE == 'ADDRESSCLEANSE'
          || env.TEST_TYPE == 'BOTH')
        name: Run integration tests in STAGE environment for test type ADDRESSCLEANSE/BOTH
        continue-on-error: true
        env:
          CLIENT_ID: '${{ secrets.STAGE_CLIENT_ID_ADDRESS_CLEANSE }}'
          CLIENT_SECRET: '${{ secrets.STAGE_CLIENT_SECRET_ADDRESS_CLEANSE }}'
        run: |
          cd test_automation
          python pytest_invoke.py \
          --APP='https://payroll.cst-stage.vtxdev.net/payroll/v1.0' \
          --AUTH='https://stageauth.vertexsmb.com/identity/connect/token' \
          --CLIENT_ID=$CLIENT_ID \
          --CLIENT_SECRET=$CLIENT_SECRET \
          --SCOPE='addr-cleanse' \
          --API_ARTIFACTS='DISABLED' \
          --PYTEST='-m address_cleanse'
      - if: env.TEST_ENV == 'STAGE' && (env.TEST_TYPE == 'ADDRESSCLEANSE'
          || env.TEST_TYPE == 'BOTH')
        name: XRay import integration test results in STAGE environment for test type ADDRESSCLEANSE/BOTH
        env:
          TEST_EXEC_KEY_AUTOMATION: PAYC-47218
          AUTH_TOKEN: ${{ steps.get_xray_auth_token.outputs.auth_token }}
        continue-on-error: true
        run: |
          automation_url="${XRAY_SERVER_URL}${XRAY_ENDPOINT}?projectKey=${PROJECT_KEY}&testPlanKey=${TEST_PLAN_KEY}&testExecKey=${TEST_EXEC_KEY_AUTOMATION}"
          curl -H "Content-Type: text/xml" -X POST -H "Authorization: Bearer $AUTH_TOKEN" --data @"test_automation/tests/automation-results.xml" $automation_url
      - if: env.TEST_ENV == 'PROD' && (env.TEST_TYPE == 'PAYROLL'
          || env.TEST_TYPE == 'BOTH')
        name: Run integration tests in PROD environment for test type PAYROLL/BOTH
        continue-on-error: true
        env:
          CLIENT_ID: '${{ secrets.PROD_CLIENT_ID_CALC }}'
          CLIENT_SECRET: '${{ secrets.PROD_CLIENT_SECRET_CALC }}'
        run: |
          cd test_automation
          python pytest_invoke.py \
          --APP='https://payroll.prod.vtxdev.net/payroll/v1.0' \
          --AUTH='https://auth.vertexsmb.com/identity/connect/token' \
          --CLIENT_ID=$CLIENT_ID \
          --CLIENT_SECRET=$CLIENT_SECRET \
          --SCOPE='calculation' \
          --API_ARTIFACTS='DISABLED' \
          --PYTEST='-m smoke'
      - if: env.TEST_ENV == 'PROD' && (env.TEST_TYPE == 'PAYROLL'
          || env.TEST_TYPE == 'BOTH')
        name: XRay import of integration test results in PROD environment for test type PAYROLL/BOTH
        env:
          TEST_EXEC_KEY_AUTOMATION: PAYC-47219
          AUTH_TOKEN: ${{ steps.get_xray_auth_token.outputs.auth_token }}
        continue-on-error: true
        run: |
          automation_url="${XRAY_SERVER_URL}${XRAY_ENDPOINT}?projectKey=${PROJECT_KEY}&testPlanKey=${TEST_PLAN_KEY}&testExecKey=${TEST_EXEC_KEY_AUTOMATION}"
          curl -H "Content-Type: text/xml" -X POST -H "Authorization: Bearer $AUTH_TOKEN" --data @"test_automation/tests/automation-results.xml" $automation_url
      - if: env.TEST_ENV == 'PROD' && (env.TEST_TYPE == 'ADDRESSCLEANSE'
          || env.TEST_TYPE == 'BOTH')
        name: Run integration tests in PROD environment for test type ADDRESSCLEANSE/BOTH
        continue-on-error: true
        env:
          CLIENT_ID: '${{ secrets.PROD_CLIENT_ID_ADDRESS_CLEANSE }}'
          CLIENT_SECRET: '${{ secrets.PROD_CLIENT_SECRET_ADDRESS_CLEANSE }}'
        run: |
          cd test_automation
          python pytest_invoke.py \
          --APP='https://payroll.prod.vtxdev.net/payroll/v1.0' \
          --AUTH='https://auth.vertexsmb.com/identity/connect/token' \
          --CLIENT_ID=$CLIENT_ID \
          --CLIENT_SECRET=$CLIENT_SECRET \
          --SCOPE='addr-cleanse' \
          --API_ARTIFACTS='DISABLED' \
          --PYTEST='-m address_cleanse'
      - if: env.TEST_ENV == 'PROD' && (env.TEST_TYPE == 'ADDRESSCLEANSE'
          || env.TEST_TYPE == 'BOTH')
        name: XRay import of integration test results in PROD environment for test type ADDRESSCLEANSE/BOTH
        env:
          TEST_EXEC_KEY_AUTOMATION: PAYC-47219
          AUTH_TOKEN: ${{ steps.get_xray_auth_token.outputs.auth_token }}
        continue-on-error: true
        run: |
          automation_url="${XRAY_SERVER_URL}${XRAY_ENDPOINT}?projectKey=${PROJECT_KEY}&testPlanKey=${TEST_PLAN_KEY}&testExecKey=${TEST_EXEC_KEY_AUTOMATION}"
          curl -H "Content-Type: text/xml" -X POST -H "Authorization: Bearer $AUTH_TOKEN" --data @"test_automation/tests/automation-results.xml" $automation_url
